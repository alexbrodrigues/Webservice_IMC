//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Webservice_IMC.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IMC_WSSoap", Namespace="http://tempuri.org/")]
    public partial class IMC_WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback incluirDadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback alterarDadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertIMCOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnvioIMCOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IMC_WS() {
            this.Url = global::Webservice_IMC.Properties.Settings.Default.Webservice_IMC_localhost_IMC_WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event incluirDadosCompletedEventHandler incluirDadosCompleted;
        
        /// <remarks/>
        public event alterarDadosCompletedEventHandler alterarDadosCompleted;
        
        /// <remarks/>
        public event insertIMCCompletedEventHandler insertIMCCompleted;
        
        /// <remarks/>
        public event EnvioIMCCompletedEventHandler EnvioIMCCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/incluirDados", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void incluirDados(
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep) {
            this.Invoke("incluirDados", new object[] {
                        nomeCompleto,
                        dataNascimento,
                        sexo,
                        cpf,
                        rg,
                        peso,
                        altura,
                        email,
                        etnia,
                        ativoExercicio,
                        ativoNutricionista,
                        logradouro,
                        numero,
                        complemento,
                        bairro,
                        municipio,
                        estado,
                        pais,
                        cep});
        }
        
        /// <remarks/>
        public void incluirDadosAsync(
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep) {
            this.incluirDadosAsync(nomeCompleto, dataNascimento, sexo, cpf, rg, peso, altura, email, etnia, ativoExercicio, ativoNutricionista, logradouro, numero, complemento, bairro, municipio, estado, pais, cep, null);
        }
        
        /// <remarks/>
        public void incluirDadosAsync(
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep, 
                    object userState) {
            if ((this.incluirDadosOperationCompleted == null)) {
                this.incluirDadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnincluirDadosOperationCompleted);
            }
            this.InvokeAsync("incluirDados", new object[] {
                        nomeCompleto,
                        dataNascimento,
                        sexo,
                        cpf,
                        rg,
                        peso,
                        altura,
                        email,
                        etnia,
                        ativoExercicio,
                        ativoNutricionista,
                        logradouro,
                        numero,
                        complemento,
                        bairro,
                        municipio,
                        estado,
                        pais,
                        cep}, this.incluirDadosOperationCompleted, userState);
        }
        
        private void OnincluirDadosOperationCompleted(object arg) {
            if ((this.incluirDadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.incluirDadosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/alterarDados", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void alterarDados(
                    int idPessoa, 
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep) {
            this.Invoke("alterarDados", new object[] {
                        idPessoa,
                        nomeCompleto,
                        dataNascimento,
                        sexo,
                        cpf,
                        rg,
                        peso,
                        altura,
                        email,
                        etnia,
                        ativoExercicio,
                        ativoNutricionista,
                        logradouro,
                        numero,
                        complemento,
                        bairro,
                        municipio,
                        estado,
                        pais,
                        cep});
        }
        
        /// <remarks/>
        public void alterarDadosAsync(
                    int idPessoa, 
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep) {
            this.alterarDadosAsync(idPessoa, nomeCompleto, dataNascimento, sexo, cpf, rg, peso, altura, email, etnia, ativoExercicio, ativoNutricionista, logradouro, numero, complemento, bairro, municipio, estado, pais, cep, null);
        }
        
        /// <remarks/>
        public void alterarDadosAsync(
                    int idPessoa, 
                    string nomeCompleto, 
                    System.DateTime dataNascimento, 
                    string sexo, 
                    string cpf, 
                    string rg, 
                    double peso, 
                    double altura, 
                    string email, 
                    string etnia, 
                    int ativoExercicio, 
                    int ativoNutricionista, 
                    string logradouro, 
                    string numero, 
                    string complemento, 
                    string bairro, 
                    string municipio, 
                    string estado, 
                    string pais, 
                    string cep, 
                    object userState) {
            if ((this.alterarDadosOperationCompleted == null)) {
                this.alterarDadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnalterarDadosOperationCompleted);
            }
            this.InvokeAsync("alterarDados", new object[] {
                        idPessoa,
                        nomeCompleto,
                        dataNascimento,
                        sexo,
                        cpf,
                        rg,
                        peso,
                        altura,
                        email,
                        etnia,
                        ativoExercicio,
                        ativoNutricionista,
                        logradouro,
                        numero,
                        complemento,
                        bairro,
                        municipio,
                        estado,
                        pais,
                        cep}, this.alterarDadosOperationCompleted, userState);
        }
        
        private void OnalterarDadosOperationCompleted(object arg) {
            if ((this.alterarDadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.alterarDadosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertIMC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertIMC(double pImc, int idPessoa) {
            this.Invoke("insertIMC", new object[] {
                        pImc,
                        idPessoa});
        }
        
        /// <remarks/>
        public void insertIMCAsync(double pImc, int idPessoa) {
            this.insertIMCAsync(pImc, idPessoa, null);
        }
        
        /// <remarks/>
        public void insertIMCAsync(double pImc, int idPessoa, object userState) {
            if ((this.insertIMCOperationCompleted == null)) {
                this.insertIMCOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertIMCOperationCompleted);
            }
            this.InvokeAsync("insertIMC", new object[] {
                        pImc,
                        idPessoa}, this.insertIMCOperationCompleted, userState);
        }
        
        private void OninsertIMCOperationCompleted(object arg) {
            if ((this.insertIMCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertIMCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnvioIMC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnvioIMC(int idPessoa) {
            this.Invoke("EnvioIMC", new object[] {
                        idPessoa});
        }
        
        /// <remarks/>
        public void EnvioIMCAsync(int idPessoa) {
            this.EnvioIMCAsync(idPessoa, null);
        }
        
        /// <remarks/>
        public void EnvioIMCAsync(int idPessoa, object userState) {
            if ((this.EnvioIMCOperationCompleted == null)) {
                this.EnvioIMCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnvioIMCOperationCompleted);
            }
            this.InvokeAsync("EnvioIMC", new object[] {
                        idPessoa}, this.EnvioIMCOperationCompleted, userState);
        }
        
        private void OnEnvioIMCOperationCompleted(object arg) {
            if ((this.EnvioIMCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnvioIMCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void incluirDadosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void alterarDadosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void insertIMCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EnvioIMCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591